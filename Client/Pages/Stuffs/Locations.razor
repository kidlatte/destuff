@inject IHttpService Http
@inject IDialogService Dialog

<MudDataGrid Items="Models" SortMode="SortMode.None" Elevation="0">
    <Columns>
        <PropertyColumn Property="x => x.Location" Title="Location">
            <CellTemplate>
                <MudLink Href="@($"/locations/{context.Item.Location.Slug}")">@context.Item.Location.Name</MudLink>
            </CellTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.Count" />
        <TemplateColumn Sortable="false">
            <CellTemplate>
                <div class="d-flex flex-nowrap">
                    <DeleteIconButton OnClick="_ => OnDeleteClick(context.Item)" />
                </div>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>

@code
{
    [Parameter] public IStuffModel? Stuff { get; set; }
    [Parameter] public ICollection<StuffLocationModel>? Models { get; set; }

    async void OnDeleteClick(StuffLocationModel item)
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(LocationRemoveModal.Model), item);
        parameters.Add(nameof(LocationRemoveModal.Stuff), Stuff);

        var dialog = await Dialog.ShowAsync<LocationRemoveModal>("", parameters);
        var result = await dialog.Result;

        var data = result.Data as StuffLocationModel;
        if (!result.Canceled && data != null && Models != null)
        {
            Models.Remove(data);
            StateHasChanged();
        }
    }
}