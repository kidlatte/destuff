@page "/"
@inject IHttpService http

<PageTitle>Stuffs | Destuff</PageTitle>

<h1>Destuff!</h1>

<div class="text-end">
    <button @onclick="() => create?.Open()" type="button" class="btn btn-primary">Add</button>
</div>

@if (items.OrEmpty().Any())
{
    <table class="table">
        <thead>
            <tr>
                <th scope="col">Name</th>
                <th scope="col" style=""></th>
            </tr>
        </thead>
        <tbody class="table-group-divider">
            @foreach(var item in items.OrEmpty())
            {
                <tr>
                    <td>@item.Name</td>
                    <td>
                        <button @onclick="() => update?.Open(item)" class="btn btn-sm btn-outline-primary border border-0">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                                <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
                                <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z"/>
                            </svg>
                        </button>
                        <button @onclick="() => delete?.Open(item)" class="btn btn-sm btn-outline-danger border border-0">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"/>
                                <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"/>
                            </svg>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<CreateModal @ref="create" OnCreated="LoadData" />
<UpdateModal @ref="update" OnUpdated="LoadData" />
<DeleteModal @ref="delete" OnDeleted="LoadData" />

@code
{
    ICollection<StuffModel>? items { get; set; }

    CreateModal? create;
    UpdateModal? update;
    DeleteModal? delete;

    protected override Task OnInitializedAsync() => LoadData();

    async Task LoadData(StuffModel? model = null)
    {
        var result = await http.GetAsync<PagedList<StuffModel>>(ApiRoutes.Stuffs);
        if (result != null)
            items = result.List;
    }
}