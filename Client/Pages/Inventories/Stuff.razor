<div>
    @if (uploads != null) {
        <div class="mb-4">
            <UploadThumbnails Items="uploads" />
        </div>
    }

    <dl>
        <dt>Name</dt>
        <dd>
            
            <MudLink Href="@($"/stuffs/{Model.Slug}")">
                @Model.Name
            </MudLink>
        </dd>
    </dl>

    @if (!string.IsNullOrEmpty(Model.Url)) {
        <dl>
            <dt>URL</dt>
            <dd class="text-truncate">
                <MudLink Href="@Model.Url" Target="_blank">
                    @Model.Url
                </MudLink>
            </dd>
        </dl>
    }

    @if (Model.IsSingleLocation && Model.FirstLocation != null) {
        <dl>
            <dt>Location</dt>
            <dd>
                <LocationLink Model="Model.FirstLocation" />
            </dd>
        </dl>
    }
    else if (Model.StuffLocations != null && Model.StuffLocations.Any()) {
        <dl>
            <dt>Count</dt>
            <dd>
                <MudLink Href="@($"/stuffs/{Model.Slug}/locations")">
                    @Model.StuffLocations.Sum(x => x.Count)
                </MudLink>
            </dd>
        </dl>
        <dl>
            <dt>Location</dt>
            <dd>
                @foreach (var (item, i) in Model.StuffLocations.ToIndex()) {
                    @if (i > 0) {
                        <text>, </text>
                    }

                    <LocationLink Model="item.Location" />

                    @if (item.Count > 1) {
                        <span title="@($"{item.Count} units")">@($" ({item.Count})")</span>
                    }
                }
            </dd>
        </dl>
    }

    <div>@Model.Notes</div>
</div>

@code {

    [Parameter] public required StuffModel Model { get; set; }
    ICollection<UploadModel>? uploads;

    protected override void OnParametersSet()
    {
        uploads = Model.Uploads;
    }
}
