@page "/inventory"
@attribute [Authorize]

@inject NavigationManager Nav
@inject IHttpService Http
@inject IDialogService Dialog

<PageTitle>Inventory | Destuff</PageTitle>

<div class="d-md-flex my-5 my-md-3">
    @if (Model != null) {
        <div class="text-right text-nowrap order-1 ms-5">
            <MudButton Variant="Variant.Outlined" Color="Color.Primary">
                Submit
            </MudButton>
            <MudButton OnClick="OnSkipClick" Variant="Variant.Outlined" EndIcon="@Icons.Material.Outlined.SkipNext">
                Skip
            </MudButton>
        </div>
    }

    <div class="text-truncate me-auto order-0">
        <MudText Typo="Typo.h1" Class="text-truncate">Inventory</MudText>
    </div>
</div>

@if (Model != null) {
    <MudPaper Class="my-5 pa-3 pa-md-5">
        <MudText Typo="Typo.h2" Class="mb-3">Stuff</MudText>
        <Stuff Model="Model" />
    </MudPaper>

    <MudPaper Class="my-5 pa-3 pa-md-5">
        <MudText Typo="Typo.h2" Class="mb-3">Locations</MudText>
        <Locations Model="Model" />
    </MudPaper>
}

@code {

    StuffModel? Model { get; set; }
    bool loading;

    protected override async Task OnInitializedAsync()
    {
        await GetStuff();
    }

    async void OnSkipClick() => await GetStuff();

    async Task GetStuff()
    {
        loading = true;
        Model = await Http.GetAsync<StuffModel>(ApiRoutes.InventoryStuff);
        loading = false;
    }
}
