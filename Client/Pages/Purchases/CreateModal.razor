@inject IHttpService Http

@if (Model != null)
{
    <EditForm OnValidSubmit="OnSubmit" Model="Model">
        <MudDialog>
            <TitleContent>
                <MudText Typo="Typo.h6">Add Purchase</MudText>
            </TitleContent>
            <DialogContent>
                <DataAnnotationsValidator />

                <SupplierSelect @bind-Value="Model.SupplierId" Disabled="loading" />

                <MudDatePicker @bind-Date="Model.Receipt" For="@(() => Model.Receipt)" Disabled="loading"
                              Label="Receipt Date" Variant="Variant.Outlined" />
                <MudDatePicker @bind-Date="Model.Received" For="@(() => Model.Received)" Disabled="loading"
                               Label="Received Date" Variant="Variant.Outlined" />
                <MudTextField @bind-Value="Model.Notes" For="@(() => Model.Notes)" Disabled="loading"
                              Label="Notes" Variant="Variant.Outlined" Lines="3" />

                <MudText Color="@Color.Error">@error</MudText>
            </DialogContent>
            <DialogActions>
                <LoadingButton Loading="loading" />
                <MudButton OnClick="() => dialog?.Cancel()" Disabled="loading" Color="Color.Default">
                    Cancel
                </MudButton>
            </DialogActions>
        </MudDialog>
    </EditForm>
}

@code {
    [CascadingParameter]
    MudDialogInstance? dialog { get; set; }

    [Parameter]
    public PurchaseRequest? Model { get; set; }

    string error { get; set; } = "";
    bool loading { get; set; } = false;

    protected override void OnInitialized() => Model ??= new PurchaseRequest();

    async Task OnSubmit()
    {
        if (Model == null)
            throw new NullReferenceException();

        loading = true;

        try
        {
            var result = await Http.PostAsync<PurchaseModel>(ApiRoutes.Purchases, Model);
            dialog?.Close(DialogResult.Ok(result));
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }

        loading = false;
    }
}