@if (isOpen)
{
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div class="toast fade show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                @if (IsError)
                {
                    <svg class="bd-placeholder-img rounded me-2 bg-primary" width="20" height="20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" preserveAspectRatio="xMidYMid slice" focusable="false">
                        <rect width="100%" height="100%" fill="red"></rect>
                    </svg>
                }
                else
                {
                    <svg class="bd-placeholder-img rounded me-2 bg-primary" width="20" height="20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" preserveAspectRatio="xMidYMid slice" focusable="false">
                        <rect width="100%" height="100%" fill="#007aff"></rect>
                    </svg>
                }

                <button @onclick="Close" type="button" class="ms-auto btn-close" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                @Message
            </div>
        </div>
    </div>
}

@code
{
    string? Message { get; set; }
    bool IsError { get; set; }
    bool isOpen = false;

    public void Open(string message, bool error = false)
    {
        Message = message;
        IsError = error;
        isOpen = true;
        StateHasChanged();

        Task.Run(async () => 
        {
            await Task.Delay(3000);
            isOpen = false;
            StateHasChanged();
        }).FireAndForget();
    }

    public void Error(string message) => Open(message, true);

    public void Close()
    {
        isOpen = false;
    }

}